"""

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qd72k2xntZ0F49e8zn4ox9IOZcnWwTBk

"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


dataset = pd.read_csv('Credit_Card_Applications.csv')
X = dataset.iloc[:, :-1].values 
y = dataset.iloc[:, -1].values

# Feature Scaling

from sklearn.preprocessing import MinMaxScaler
data_scale = MinMaxScaler(feature_range = (0,1))
X = data_scale.fit_transform(X)

#Training the SOM

from minisom import MiniSom
som_mod = MiniSom(x=10, y=10, input_len= 14, sigma= 1.0, learning_rate = 0.6)
som_mod.random_weights_init(X)
som_mod.train_random(data = X, num_iteration = 100)

#Visualizing the results

from pylab import bone, pcolor, colorbar, plot, show
bone()
pcolor(som_mod.distance_map().T)
colorbar()
markers = ['o', 's']
colors = ['r', 'g']
for i, x in enumerate(X):
    w = som_mod.winner(x)
    plot(w[0] + 0.5,
         w[1] + 0.5,
         markers[y[i]],
         markeredgecolor = colors[y[i]],
         markerfacecolor = 'None',
         markersize = 10,
         markeredgewidth = 2)
show()

# Finding the frauds

mappings = som_mod.win_map(X)
frauds = np.concatenate((mappings[(1,1)], mappings[(4,1)]), axis = 0)
frauds = data_scale.inverse_transform(frauds)

#Printing the Fraunch Clients

print('IDs of fraudulent customers')
for i in frauds[:, 0]:
  print(int(i))